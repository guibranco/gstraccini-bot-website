name: Deploy via FTP

on:
  push:
    branches: [main]
  workflow_dispatch:

concurrency:
  group: ${{ github.workflow }}-${{ github.ref }}
  cancel-in-progress: true

jobs:
  deploy:
    name: 📦 Deploy Application to FTP
    runs-on: ubuntu-latest
    timeout-minutes: 10
    outputs:
      fullSemVer: ${{ steps.gitversion.outputs.fullSemVer }}
    steps:
      - name: 📥 Checkout Repository
        uses: actions/checkout@v4
        with:
          fetch-depth: 0

      - name: 🔧 Install GitVersion
        uses: gittools/actions/gitversion/setup@v4.1.0
        with:
          versionSpec: "6.x"

      - name: 🏷️ Determine Version Number
        id: gitversion
        uses: gittools/actions/gitversion/execute@v4.1.0

      - name: 🔑 Generate GitHub Secrets Configuration
        run: |
          cd src
          echo "<?php" >> github.secrets.php
          echo "\$gitHubClientId      = \"${{ secrets.GH_CLIENT_ID }}\";" >> github.secrets.php
          echo "\$gitHubClientSecret  = \"${{ secrets.GH_CLIENT_SECRET }}\";" >> github.secrets.php
          echo "\$gitHubRedirectUri   = \"${{ secrets.GH_REDIRECT_URI }}\";" >> github.secrets.php

      - name: 🔑 Generate Webhook Configuration
        run: |
          cd src
          echo "<?php" >> webhook.secrets.php
          echo "\$gstracciniApiUrl      = \"${{ secrets.GSTRACCINI_API_HEALTHCHECK_URL }}\";" >> webhook.secrets.php
          echo "\$webhookSecret         = \"${{ secrets.WEBHOOK_SECRET }}\";" >> webhook.secrets.php
          echo "\$webhookUrl            = \"${{ secrets.WEBHOOK_URL }}\";" >> webhook.secrets.php
          echo "\$webhooksProcessingUrl = \"${{ secrets.WEBHOOK_PROCESSING_HEALTHCHECK_URL }}\";" >> webhook.secrets.php
          echo "\$webhooksServiceUrl    = \"${{ secrets.WEBHOOK_SERVICE_HEALTHCHECK_URL }}\";" >> webhook.secrets.php

      - name: 📝 Create Version File for API
        run: |
          cd src       
          echo ${{ env.fullSemVer }} > version.txt

      - name: 📦 Package Files for Deployment
        run: |
          cd src
          zip -r deploy.zip . -x install.php
          cd ..
          mkdir deploy
          mv src/deploy.zip deploy
          cp "src/install.php" deploy

      - name: 📤 Upload Application via FTP
        uses: sebastianpopp/ftp-action@releases/v2
        with:
          host: ${{ secrets.FTP_SERVER }}
          user: ${{ secrets.FTP_USERNAME }}
          password: ${{ secrets.FTP_PASSWORD }}
          localDir: "deploy/"
          remoteDir: "/"

      - name: 🚀 Trigger Installation Process
        run: curl --fail-with-body "${{ secrets.INSTALLATION_ENDPOINT }}install.php"

  create_release:
    name: 📢 Create GitHub Release
    runs-on: ubuntu-latest
    timeout-minutes: 10
    permissions:
      contents: write
    needs: [deploy]
    env:
      fullSemVer: ${{ needs.deploy.outputs.fullSemVer }}
    steps:
      - name: 🏷️ Create and Publish Release
        uses: ncipollo/release-action@v1.18.0
        with:
          skipIfReleaseExists: true
          allowUpdates: false
          draft: false
          makeLatest: true
          tag: v${{ env.fullSemVer }}
          name: Release v${{ env.fullSemVer }}
          generateReleaseNotes: true
          body: Release ${{ env.fullSemVer }} of ${{ github.repository }}
